<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<display-name>mints</display-name>
	<!-- 加载顺序是：ServletContext -> context-param -> listener -> filter -> servlet 
		，而同个类型之间的实际程序调用的时候的顺序是根据对应的 mapping 的顺序进行调用的 -->

	<!--###########################全局范围内环境参数初始化########################### -->

	<!-- spring -->
	<context-param>
		<param-name>contextConfigLocation</param-name><!--参数名称 -->
		<param-value>classpath:spring/applicationContext.xml</param-value><!--参数取值，对应spring配置文件 -->
	</context-param>
	<!-- log4j2 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name><!--参数名称 -->
		<param-value>classpath:log4j/log4j2.xml</param-value><!--参数取值，对应log4j2配置文件 -->
	</context-param>
	<!-- 用于区分一个tomcat下面部署的多个项目，log4j2.xml使用${webName.root}或在JAVA中使用System.getProperty("www.mints.com")即可获得该项目的根路径 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>www.mints.com</param-value>
	</context-param>
	<!-- spring刷新Log4j配置文件的间隔60秒,单位为millisecond -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>

	<!--###########################过滤器配置########################### -->
	<!-- 编码过滤器，最好放在最前面以确保都可进行拦截，只可处理Post请求-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<!-- Druid监控过滤器，用于采集web-jdbc关联监控的数据。 -->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<!-- 需要排除一些不必要的url，比如.js,/jslib/等等 -->
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
	</filter>
	<!-- spring-security 过滤器 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>	
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--###########################监听器配置########################### -->

	<!-- 防止spring内存溢出监听器，此条监听如果配置，最好放在最前面以保证效果-->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!--spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!--定义Listener的类名称 -->
	</listener>
	<!--spring使用log4j监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- ###########################servlet配置########################### -->

	<!--用来声明一个spring servlet的数据,Struts2的区别就是此处无需设置servlet，而是用fileter转给StrutsPrepareAndExecuteFilter -->
	<servlet>
		<servlet-name>SpringMVC</servlet-name> <!--指定servlet的名称 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class><!-- 
			SpringMVC前端控制器 -->
		<!--用来定义参数,可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/applicationContext-mvc.xml</param-value>
		</init-param>
		<!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet. -->
		<load-on-startup>1</load-on-startup>
		<!-- <async-supported>true</async-supported>设置是否启用异步支持,报错不支持？ -->
	</servlet>
	<!-- Druid监控servlet -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>

	<!-- ###########################servlet-mapping配置########################### -->

	<!--用来定义spring servlet所对应的URL -->
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name><!-- 指定servlet的名称,对应上面的servlet-name -->
		<!--指定servlet所对应的URL / 代表请求列表，例如/spring，不会请求*.jsp这种资源。 /*会请求所有资源，一般在filter中这样设置 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!--用来定义Druid servlet所对应的URL -->
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<!-- ###########################其他配置########################### -->

	<!-- 会话超时配置（单位为分钟）,一般为30分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<!-- 首页，如果定义多个，则服务器会在第一个尝试失败之后去尝试第二个... -->
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
	<!-- 错误页面 -->
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/500.jsp</location>
	</error-page>


</web-app>
